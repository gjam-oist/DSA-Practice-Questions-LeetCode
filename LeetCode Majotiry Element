class Solution {
    public int majorityElement(int[] nums) {
        // Moore's Voting Algo
        
        int ele = 0;
        int cnt = 0;
        for(int i = 0; i < nums.length; i++){
            if(cnt == 0){
                ele = nums[i];
            }
            
            if(nums[i] == ele){
                cnt += 1;
            }else{
                cnt -= 1;
            }
        }
        
        return ele;
    }
}

//Using Map
class Solution {
    public int majorityElement(int[] nums) {
        HashMap<Integer, Integer> map = new HashMap<>();
        for(int i = 0; i < nums.length; i++){
            if(map.containsKey(nums[i])){
                int of = map.get(nums[i]);
                int nf = of + 1;
                map.put(nums[i], nf);
            }else{
                map.put(nums[i], 1);
            }
            
        }
        
        for(int num : nums){
            if(map.get(num) > (nums.length/2)){
                return num;
            }
        }
        
        return 0;
    }
}

// Using Sort

class Solution {
    public int majorityElement(int[] nums) {
        Arrays.sort(nums);
        
        return nums[nums.length/2];
    }
}
